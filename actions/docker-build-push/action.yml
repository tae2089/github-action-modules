name: "docker build and push"
description: "Build and push Docker image to the registry"
inputs:
  # hub login
  dockerhub_password:
    description: "Docker Hub password. you cane use docker hub token"
    required: false
  dockerhub_username:
    description: "Docker Hub username"
    required: false
  # aws login
  aws-region:
    description: "AWS region"
    required: false
  role-to-assume:
    description: "AWS role to assume"
    required: false
  role-session-name:
    description: "AWS role session name"
    required: false
  # docker image options
  provider:
    description: "Registry location to push the Docker image"
    default: "hub"
    required: false
  registry:
    description: "Registry location to push the Docker image"
    default: "docker.io"
    required: false
  repository:
    description: "Repository name to push the Docker image"
    required: true
  tag:
    description: "Tag of the Docker images to attach to the environment"
    required: false
  length:
    description: "Length of the shortened commit SHA"
    default: "7"
    required: true
  prefix:
    description: "Prefix for the tag"
    default: ""
    required: false
  # Docker bulid options
  docker-path:
    description: "Dockerfile path"
    required: false
    default: ./Dockerfile
  docker-build-target:
    description: "Sets the target stage to build"
    required: false
    default: ""
  docker-build-secrets:
    description: "Docker build secrets"
    required: false
    default: ""
  build-args:
    description: "build arguments to inject python container."
    required: false
    default: ""

outputs:
  tag:
    description: "Generated tag for the Docker image"
    value: ${{ steps.generate-tag.outputs.tag }}

runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      if: ${{ inputs.provider == 'aws' }}
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        role-session-name: ${{ inputs.role-session-name }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to ECR
      if: ${{ inputs.provider == 'aws' }}
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      if: ${{ inputs.provider == 'hub' }}
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_password }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Generate Tag
      id: generate-tag
      uses: tae2089/github-action-modules/actions/generate-tag@main
      with:
        tag: ${{ inputs.tag }}
        length: ${{ inputs.length }}
        prefix: ${{ inputs.prefix }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v3
      with:
        target: ${{ inputs.docker-build-target }}
        context: .
        file: ${{ inputs.docker-path }}
        push: true
        tags: "${{ inputs.registry }}/${{ inputs.repository }}:${{ steps.generate-tag.outputs.tag }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max
        secrets: ${{ inputs.docker-build-secrets}}
        build-args: ${{ inputs.build-args }}
